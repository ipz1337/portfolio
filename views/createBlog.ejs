<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Callum's Portfolio</title>
    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700,800" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.0/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.17/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">

    <style>
      :root {
        --clr-primary: #FBBF24;
        --clr-bg: #111827;
        --clr-text: #F3F4F6;
        --trans-speed: 0.3s;
        --content-padding: 20px;
      }

      body {
        font-family: 'Montserrat', sans-serif;
        background: var(--clr-bg);
        color: var(--clr-text);
        overflow-x: hidden;
      }

      .section-title {
        font-size: 3rem;
        font-weight: 800;
        color: var(--clr-text);
        line-height: 1.2;
        letter-spacing: -1px;
        margin-bottom: 2rem;
      }

      /* Adjusting input fields for better visibility */
      input[type="text"], input[type="password"], textarea {
        background-color: #2D3748; /* Darker shade */
        color: var(--clr-text);
      }
      .ql-toolbar button {
    color: white !important;
}

/* Making input labels white */
label {
    color: white !important;
}
      input[type="text"]:focus, input[type="password"]:focus, textarea:focus {
        outline: none;
        border-color: var(--clr-primary);
        box-shadow: 0 0 0 3px rgba(251, 191, 36, 0.45); /* Adjusted for the primary color */
      }

      .ql-container {
          background-color: #2D3748; /* Darker shade to match the theme */
      }

      .ql-toolbar.ql-snow {
          border-color: #4A5568; /* Adjusted for better visibility */
      }

      .ql-snow .ql-picker-label:hover,
      .ql-snow .ql-picker-label.ql-active,
      .ql-snow .ql-picker-item:hover,
      .ql-snow .ql-picker-item.ql-selected {
          color: var(--clr-primary);
      }

      .ql-snow .ql-picker.ql-expanded .ql-picker-label {
          border-color: var(--clr-primary);
      }

      /* Enhancing the submit button */
      button[type="submit"] {
          padding: 10px 20px;
          transition: background-color 0.3s ease;
      }

      button[type="submit"]:hover {
          background-color: #2563EB; /* Darker shade of blue */
      }

      /* Style for the custom HTML toggle button */
.ql-htmlToggle::before {
    content: '<>';
}

    </style>
</head>
<body>
    <%- include('partials/navbar') %>
    <div class="container mx-auto px-4 py-20">
        <h2 class="section-title">Create Blog</h2>
        <form action="/create-blog" method="post">
            <div class="mb-4">
                <label for="title" class="block text-sm font-medium text-gray-700">Title</label>
                <input type="text" name="title" id="title" required class="mt-1 p-2 w-full border rounded-md">
            </div>
            <div class="mb-4">
                <label for="image" class="block text-sm font-medium text-gray-700">Image Link</label>
                <input type="text" name="image" id="image" required class="mt-1 p-2 w-full border rounded-md">
            </div>
            <div class="mb-4">
                <label for="editor" class="block text-sm font-medium text-gray-700">Content</label>
                <div id="editor" style="height: 400px;"></div>
                <textarea name="content" id="content" hidden></textarea>
            </div>
            <div class="mb-4">
                <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
                <input type="password" name="password" id="password" required class="mt-1 p-2 w-full border rounded-md">
            </div>
            <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">Submit</button>
        </form>
    </div>
    <%- include('partials/footer') %>
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <script>
        const toolbarOptions = [
            ['bold', 'italic', 'underline', 'strike'],
            ['blockquote', 'code-block'],
            ['htmlToggle'],  // <-- Custom button
            ['link', 'image', 'video'],
            // ... (rest of the toolbar options) ...
            [{ 'header': 1 }, { 'header': 2 }],
            [{ 'list': 'ordered'}, { 'list': 'bullet' }],
            [{ 'script': 'sub'}, { 'script': 'super' }],
            [{ 'indent': '-1'}, { 'indent': '+1' }],
            [{ 'direction': 'rtl' }],
            [{ 'size': ['small', false, 'large', 'huge'] }],
            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
            [{ 'color': ['#FBBF24', '#EF4444', '#10B981', '#3B82F6']}, 
             { 'background': ['#FBBF24', '#EF4444', '#10B981', '#3B82F6'] }],
            [{ 'align': [] }],
            ['clean']
        ];
    
        const quill = new Quill('#editor', {
        theme: 'snow',
        modules: {
            toolbar: {
                container: toolbarOptions,
                handlers: {
                    'link': linkHandler
                }
            }
        }
    });

    function imageHandler() {
        const range = quill.getSelection();
        const imageURL = prompt('Enter the image URL:');

        if (imageURL) {
            quill.insertEmbed(range.index, 'image', imageURL);
        }
    }

    function linkHandler() {
        const range = quill.getSelection();
        let linkURL
        const linkText = prompt('Enter the link text:');
        if (linkText) {
            linkURL = prompt('Enter the link URL:');
        } else {
            alert('Please enter the link text.');
        }
        if (linkURL) {
            quill.insertText(range.index, linkText, { 'link': linkURL });
        } else {
            alert('Please enter the link URL.');
        }
    }

    
        function toggleHTMLMode() {
            const editorContent = quill.container.querySelector('.ql-editor');
            if (editorContent.getAttribute('contenteditable') === "true") {
                // Switch to HTML mode
                editorContent.setAttribute('contenteditable', 'false');
                const html = editorContent.innerHTML;
                editorContent.textContent = html;
            } else {
                // Switch to WYSIWYG mode
                editorContent.setAttribute('contenteditable', 'true');
                const text = editorContent.textContent;
                editorContent.innerHTML = text;
            }
        }


        const form = document.querySelector('form');
        form.onsubmit = function() {
            const contentInput = document.querySelector('textarea[name=content]');
            contentInput.value = quill.root.innerHTML;
        };
    </script>
</body>
</html>
